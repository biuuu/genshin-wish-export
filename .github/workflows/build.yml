name: Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-update:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Build Update
        run: |
          yarn --frozen-lockfile
          yarn build:dir
          yarn build-update
      - name: Deploy
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          commit_message: Update app
          build_dir: ./build/update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-package:
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - name: Build Update
        run: |
          yarn --frozen-lockfile
          yarn build
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: certs/mac.p12
      - uses: actions/upload-artifact@v2
        name: "Upload package for ${{ matrix.os }}"
        if: matrix.os == 'windows-latest'
        with:
          name: "${{ matrix.os }} package"
          path: build/Genshin*zip
      - uses: actions/upload-artifact@v2
        name: "Upload package for ${{ matrix.os }}"
        if: matrix.os == 'macos-latest'
        with:
          name: "${{ matrix.os }} package"
          path: build/Genshin*dmg
